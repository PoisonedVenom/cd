diskfcfs
disks = list(map(int, input('Enter the sequence of Disk requests: ').strip().split()))
head = int(input('Enter current head position: '))

k=[]
k.append(abs(disks[0]-head))
for i in range(len(disks)-1):
    k.append(abs(disks[i+1]-disks[i]))
print(k)
print("Total head movement or total seek time will be", sum(k))

fscan

disks = list(map(int, input('Enter the sequence of Disk requests: ').strip().split()))
head = int(input('Enter current head position: '))
disks.sort()
k,l=[],[]
for i in range(len(disks)-1):
    if disks[i] < head:
        k.append(disks[i])
    else:
        l.append(abs(disks[i+1]-disks[i]))
k.append(head)
k.sort(reverse=True)
k.append(0)
for i in range(len(k)-1,len(disks)):
    k.append(disks[i])
h=[]
for i in range(len(k)-1):
    h.append(abs(k[i+1]-k[i]))


print(k)
print("Total head movement or total seek time will be", sum(h))

sstf
disks = list(map(int, input('Enter the sequence of Disk requests: ').strip().split()))
head = int(input('Enter current head position: '))
disks.sort()
k,l=[],[]
for i in range(len(disks)-1):
    if disks[i] < head:
        k.append(disks[i])
    else:
        l.append(abs(disks[i+1]-disks[i]))
k.append(head)
k.sort(reverse=True)
for i in range(len(k)-1,len(disks)):
    k.append(disks[i])
h=[]
for i in range(len(k)-1):
    h.append(abs(k[i+1]-k[i]))

#82,170,43,140,24,16,190
#(50-43)+(43-24)+(24-16)+(82-16)+(140-82)+(170-140)+(190-170)  =208 Unit

print(k)
print("Total head movement or total seek time will be", sum(h))


#look
#LOOK
import sys
a = int(input("Enter lower limit:"))
b = int(input("Enter upper limit:"))
print("Enter 1 if pointer is toward LHS else 0:")
c = int(input())
curr = int(input("Enter curr position of pointer:"))
l = list(map(int,input("Enter order of request:").split()))
l.append(curr)
l.sort()

ans = 0
for i in range(1,len(l)):
    ans += l[i] - l[i-1]
if c:
    x = a
    for i in range(len(l)):
        if l[i] ==  curr:
            if i  < len(l) - 1:
                x = l[i+1]
    print("Total seek time:",ans+curr)
else:
    x = b
    for i in range(len(l)):
        if l[i] ==  curr:
            if i:
                x = l[i-1]
    print("Total seek time:",ans+ abs(l[-1]-curr))

#SCAN
import sys
a = int(input("Enter lower limit:"))
b = int(input("Enter upper limit:"))
print("Enter 1 if pointer is toward LHS else 0:")
c = int(input())
curr = int(input("Enter curr position of pointer:"))
l = list(map(int,input("Enter order of request:").split()))
l.append(curr)
l.sort()

ans = 0
for i in range(1,len(l)):
    ans += l[i] - l[i-1]
if c:
    x = a
    for i in range(len(l)):
        if l[i] ==  curr:
            if i  < len(l) - 1:
                x = l[i+1]
    print("Total seek time:",ans+abs(a-l[0])+x)
else:
    x = b
    for i in range(len(l)):
        if l[i] ==  curr:
            if i:
                x = l[i-1]
    print("Total seek time:",ans+abs(b-l[-1])+ abs(l[-1]-x))
    
#C_SCAN
import sys
a = int(input("Enter lower limit:"))
b = int(input("Enter upper limit:"))
print("Enter 1 if pointer is toward LHS else 0:")
c = int(input())
curr = int(input("Enter curr position of pointer:"))
l = list(map(int,input("Enter order of request:").split()))
l.append(curr)
l.sort()

ans = 0
for i in range(1,len(l)):
    ans += l[i] - l[i-1]
print("Total seek time:",ans+abs(a-l[0])+abs(b-l[-2])+abs(a-b))
    

